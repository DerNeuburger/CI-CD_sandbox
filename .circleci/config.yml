version: 2.1

orbs:
  linting-files-2: circleci/shellcheck@1.3.15
  linting-files-3: netgaintechnology/prebuild-orb@1.0.42

commands:
  set-docker-permissions:
    description: "Due to circleci cli not passing sudo permissions to docker command, this workaroung adds the sudo prefix to docker commands (https://stackoverflow.com/questions/45796661/docker-permission-denied-while-trying-to-connect-to-docker-daemon-with-local-ci/45796662#45796662)"
    steps:
      - run:
          command: |
            if [[ $CIRCLE_SHELL_ENV == *"localbuild"* ]]; then
                echo "export docker='sudo docker'" >> $BASH_ENV
            else
                echo "export docker='docker'" >> $BASH_ENV
            fi
  build-docker-image:
    description: "Build Docker Image"
    steps:
      - run:
          name: "Building docker image and authorizing to Dockerhub."
          command: |
            export DOCKER_IMAGE_TAG="${PROJECT_MAIN_VERSION}.${PROJECT_SUB_VERSION}.${CIRCLE_BUILD_NUM}"
            $docker build -t $DOCKER_USER/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG .
            echo $DOCKER_PASS | $docker login -u $DOCKER_USER --password-stdin
  add-circleci-dependencies:
    description: "Build Docker Image"
    steps:
      - run:
          name: "Install git and SSH client"
          command: |
            apk add \
                --update \
                --no-progress \
                git \
                openssh-client
executors:
  python-executor:
    docker:
      - image: circleci/python:3.7.3-stretch
        environment:
          BASH_ENV: source ~/app/.venv_build/bin/activate
    working_directory: ~/app
  base-executor:
    docker:
      - image: cimg/base:2020.01
    working_directory: ~/app
  shellcheck-circleci:
    docker:
      - image: quay.io/cfra/shellcheck-circleci
    working_directory: ~/app

jobs:
  linting-files-1:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: "Install Build Dependencies"
          command: |
            export PROJECT_ROOT=${CIRCLE_WORKING_DIRECTORY}
            sudo make install
      - run:
          name: "Install Test Dependencies"
          command: |
            sudo make test-install
      - run:
          name: "Linting Dockerfile"
          command: |
            make test-lint-dockerfiles
      - run:
          name: "Linting Python Files"
          command: |
            make test-lint-pythonfiles

      #- persist_to_workspace:
      #    root: ~/app
      #    paths:
      #       - .venv_build
  building:
    executor: base-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false # Not included in free tier
      - set-docker-permissions
      - build-docker-image
      #- attach_workspace:
      #   at: ~/app
  testing:
    executor: python-executor
    steps:
      - checkout
      #- attach_workspace:
      #   at: ~/app
  publishing:
    executor: base-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false # Not included in free tier
      - set-docker-permissions
      - build-docker-image
      - run: |
          export DOCKER_IMAGE_TAG="${PROJECT_MAIN_VERSION}.${PROJECT_SUB_VERSION}.${CIRCLE_BUILD_NUM}"
          $docker push $DOCKER_USER/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG
      #- attach_workspace:
      #   at: ~/app

workflows:
  development:
    jobs:
      - linting-files-1:
          filters:
            branches:
              only:
                - development
      - linting-files-2/check:
          filters:
            branches:
              only:
                - development
          pre-steps:
          - add-circleci-dependencies:
      - linting-files-3/markdown_lint:
          filters:
            branches:
              only:
                - development
          pre-steps:
          - add-circleci-dependencies:
      - building:
          filters:
            branches:
              only:
                - development
          requires:
            - linting-files-1
      - testing:
          filters:
            branches:
              only:
                - development
          requires:
            - building
      - publishing:
          filters:
            branches:
              only:
                - development
          requires:
            - testing
