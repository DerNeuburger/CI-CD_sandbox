version: 2.1

parameters:
  project_name:
    type: string
    default: "CI-CD_pipeline"

commands:
  build-docker-image:
    description: "Build Docker Image"
    steps:
      - run:
          command: |
            export DOCKER_IMAGE_TAG="${PROJECT_MAIN_VERSION}.${PROJECT_SUB_VERSION}.${CIRCLE_BUILD_NUM}"
            docker build -t $DOCKER_USER/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
executors:
  python-executor:
    docker:
      - image: circleci/python:3.7.3-stretch
        environment:
          BASH_ENV: source ~/app/.venv_build/bin/activate
    working_directory: ~/app
  base-executor:
    docker:
      - image: cimg/base:2020.01
    working_directory: ~/app

jobs:
  linting:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: "Install Build Dependencies"
          command: |
            export PROJECT_ROOT=${CIRCLE_WORKING_DIRECTORY}
            sudo make install
      - run:
          name: "Install Test Dependencies"
          command: |
            sudo make test-install
      - run:
          name: "Linting Files"
          command: |
            make test-lint
      #- persist_to_workspace:
      #    root: ~/app
      #    paths:
      #       - .venv_build
  building:
    executor: base-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false # Not included in free tier
      - build-docker-image
      #- attach_workspace:
      #   at: ~/app
  testing:
    executor: python-executor
    steps:
      - checkout
      #- attach_workspace:
      #   at: ~/app
  publishing:
    executor: base-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false # Not included in free tier
      - build-docker-image
      - run: |
          docker push $DOCKER_USER/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG
      #- attach_workspace:
      #   at: ~/app

workflows:
  development:
    jobs:
      - linting:
          filters:
            branches:
              only:
                - development
      - building:
          filters:
            branches:
              only:
                - development
          requires:
            - linting
      - testing:
          filters:
            branches:
              only:
                - development
          requires:
            - building
      - publishing:
          filters:
            branches:
              only:
                - development
          requires:
            - testing
